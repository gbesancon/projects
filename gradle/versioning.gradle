task readVersionFile {
  group = 'versioning'
  // https://docs.oracle.com/middleware/1212/core/MAVEN/maven_version.htm#MAVEN400
  def versioning = new Properties()
  file("$rootDir/version.properties").withInputStream { versioning.load(it) }
  project.ext.majorVersion = versioning['major']
  project.ext.minorVersion = versioning['minor']
  project.ext.patchVersion = versioning['patch']
  project.ext.typeVersion = versioning['type']
  
  if(project.ext.typeVersion != "SNAPSHOT" && project.ext.typeVersion != "RELEASE") {
    throw new GradleException("Version type $typeVersion not allowed.")
  }
  
  doLast {
    println "Major: " + project.ext.majorVersion
    println "Minor: " + project.ext.minorVersion
    println "Patch: " + project.ext.patchVersion
    println "Type: " + project.ext.typeVersion
  }
}

task generateBuildDescription {
  group = 'versioning'
  dependsOn 'generateShortVersion'
  dependsOn 'generateFullVersion'
  dependsOn 'generateTag'
  dependsOn 'generateMavenVersion'
}

task generateShortVersion {
  group = 'versioning'
  dependsOn 'readVersionFile'
  project.ext.shortVersion = project.ext.majorVersion + '.' + project.ext.minorVersion + '.' + project.ext.patchVersion
  doLast {
    println "Short version: " + project.ext.shortVersion
  }
}

task generateBuildDateTime {
  group = 'versioning'
  project.ext.buildDateTime = new java.text.SimpleDateFormat("yyyyMMdd.HHmmss").format(new Date())
  doLast {
    println "Build date time: " + project.ext.buildDateTime
  }
}

task generateFullVersion {
  group = 'versioning'
  dependsOn 'generateShortVersion'
  dependsOn 'generateBuildDateTime'
  project.ext.fullVersion = project.ext.shortVersion + '-' + project.ext.buildDateTime
  doLast {
    println "Full version: " + project.ext.fullVersion
  }
}

task generateTag {
  group = 'versioning'
  dependsOn 'generateFullVersion'
  dependsOn 'readVersionFile'
  project.ext.tag = project.ext.fullVersion + '-' + project.ext.typeVersion
  doLast {
    println "Tag: " + project.ext.tag
  }
}

task generateMavenVersion {
  group = 'versioning'
  dependsOn 'generateShortVersion'
  dependsOn 'readVersionFile'
  if(project.ext.typeVersion == "SNAPSHOT") {
    project.ext.mavenVersion = project.ext.shortVersion + '-' + project.ext.typeVersion
  }
  else if(project.ext.typeVersion == "RELEASE") {
    project.ext.mavenVersion = project.ext.fullVersion
  }
  doLast {
    println "Maven version: " + project.ext.mavenVersion
  }
}

task generateBuildDescriptionFiles {
  group = 'versioning'
  dependsOn 'generateShortVersionFile'
  dependsOn 'generateTypeFile'
  dependsOn 'generateBuildDateTimeFile'
  dependsOn 'generateFullVersionFile'
  dependsOn 'generateTagFile'
  dependsOn 'generateMavenVersionFile'
}

task generateShortVersionFile {
  group = 'versioning'
  dependsOn 'generateShortVersion'
  def file = new File("$rootDir/SHORT_VERSION") 
  outputs.files(file)
  doLast {
    file.text = """${shortVersion}"""
  }
}

task generateTypeFile {
  group = 'versioning'
  dependsOn 'readVersionFile'
  def file = new File("$rootDir/TYPE")
  outputs.files(file)
  doLast {
    file.text = """${typeVersion}"""
  }
}

task generateBuildDateTimeFile {
  group = 'versioning'
  dependsOn 'generateBuildDateTime'
  def file = new File("$rootDir/DATE_TIME")
  outputs.files(file)
  doLast {
    file.text = """${buildDateTime}"""
  }
}

task generateFullVersionFile {
  group = 'versioning'
  dependsOn 'generateFullVersion'
  def file = new File("$rootDir/FULL_VERSION")
  outputs.files(file)
  doLast {
    file.text = """${fullVersion}"""
  }
}

task generateTagFile {
  group = 'versioning'
  dependsOn 'generateTag'
  def file = new File("$rootDir/TAG")
  outputs.files(file)
  doLast {
    file.text = """${tag}"""
  }
}

task generateMavenVersionFile {
  group = 'versioning'
  dependsOn 'generateMavenVersion'
  def file = new File("$rootDir/MAVEN_VERSION")
  outputs.files(file)
  doLast {
    file.text = """${mavenVersion}"""
  }
  
}

task cleanBuildDescriptionFiles {
  group = 'versioning'
  dependsOn 'cleanShortVersionFile'
  dependsOn 'cleanBuildDateTimeFile'
  dependsOn 'cleanTypeFile'
  dependsOn 'cleanFullVersionFile'
  dependsOn 'cleanTagFile'
  dependsOn 'cleanMavenVersionFile'
}

task cleanShortVersionFile(type: Delete) {
  group = 'versioning'
  delete 'SHORT_VERSION'
}

task cleanBuildDateTimeFile(type: Delete) {
  group = 'versioning'
  delete 'DATE_TIME'
}

task cleanTypeFile(type: Delete) {
  group = 'versioning'
  delete 'TYPE'
}

task cleanFullVersionFile(type: Delete) {
  group = 'versioning'
  delete 'FULL_VERSION'
}

task cleanTagFile(type: Delete) {
  group = 'versioning'
  delete 'TAG'
}

task cleanMavenVersionFile(type: Delete) {
  group = 'versioning'
  delete 'MAVEN_VERSION'
}
